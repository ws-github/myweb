<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">
	<resultMap type="Address" id="addr">
		<id property="aid" column="aid"/>
		<result property="address" column="address"/>
		<result property="postCode" column="postCode"/>
	</resultMap>
	
	<resultMap type="User" id="userWithAddress">
		<constructor>
			<idArg column="uid" javaType="long" />
			<arg column="name" javaType="string" />
			<arg column="age" javaType="int" />
			<arg column="phone" javaType="string" />
			<arg column="passwd" javaType="string" />
		</constructor>
		<collection property="addrs" javaType="arraylist" ofType="Address"
			column="ownerid" resultMap="addr"/>
	</resultMap>
	
	<!--<resultMap type="User" id="user">
		<id column="uid" javaType="long" />
		<result column="name" javaType="string" />
		<result column="age" javaType="int" />
		<result column="phone" javaType="string" />
		<result column="passwd" javaType="string" />
	</resultMap>-->

	<sql id="userColumn">u.uid, u.name, u.age, u.phone, u.passwd</sql>
	<sql id="likeCondition"> like </sql>
	<sql id="addrColumn">a.aid, a.address, a.postCode</sql>

	<insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyProperty="uid">
		insert into foo.user(name,age,phone,passwd) values(#{name},#{age},#{phone},#{passwd});
	</insert>
	<delete id="deleteUser" parameterType="long">
		delete from foo.user where uid = #{uid}
	</delete>
	<update id="updateUser" parameterType="User">
		update foo.user set 
		<trim suffixOverrides=","><!-- 鍘婚櫎鐢熸垚鐨凷QL璇彞鍚庨潰鐨?," -->
			<if test="name!=null">name=#{name}, </if>
			<if test="phone!=null">phone=#{phone}, </if>
			<if test="age!=null">age=#{age}, </if>
			<if test="passwd!=null">passwd=#{passwd}</if>
		</trim>
		<where>uid=#{uid}</where>
	</update>
	
	<select id="getAllUser" resultMap="userWithAddress" parameterType="map">
		select <include refid="userColumn"/> , <include refid="addrColumn"/>
		from foo.user u left join foo.address a 
		on u.uid = a.ownerid
		<trim suffixOverrides="and">
			<where>
				<if test="name!=null"> name like #{name} and </if>
				<if test="uid!=null"> uid like #{uid} and </if>
				<if test="phone!=null"> phone like #{phone} and </if>
				<if test="age!=null"> age = #{age}</if>
			</where>
		</trim>
		<if test="page!=null and pageCount!=null">
			limit #{page}, #{pageCount}
		</if>
	</select>
	<select id="getUser" resultMap="userWithAddress" parameterType="long">
		select <include refid="userColumn"/>,<include refid="addrColumn"/> from foo.user u
		left outer join foo.address a on u.uid = a.ownerid
		<where>u.uid=#{uid}</where>
	</select>
	
</mapper>



















